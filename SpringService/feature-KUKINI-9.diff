diff --git a/.gitignore b/.gitignore
new file mode 100755
index 0000000..6d0b81a
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,38 @@
+#Eclipse
+*.pydevproject
+.project
+.metadata
+bin/**
+tmp/**
+tmp/**/*
+*.tmp
+*.bak
+*.swp
+*~.nib
+local.properties
+.classpath
+.settings/
+.loadpath
+doc/*
+# External tool builders
+.externalToolBuilders/
+
+# Locally stored "Eclipse launch configurations"
+*.launch
+
+# CDT-specific
+.cproject
+
+# PDT-specific
+.buildpath
+
+.DS_Store
+
+#Maven
+target/
+
+#Roo
+log.roo
+/test-output
+/logFile.log
+/doc
diff --git a/pom.xml b/pom.xml
index 5676086..b5907b3 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,11 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
-    <parent>
-    <artifactId>ArchiveKukini-parent</artifactId>
-    <groupId>gov.hawaii.digitalarchives</groupId>
-    <version>1.0-SNAPSHOT</version>
-  </parent>
 
     <groupId>gov.hawaii.digitalarchives</groupId>
     <artifactId>SpringService</artifactId>
@@ -16,13 +11,25 @@
 
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+        
+        <!-- TestNG Version -->
+        <testng.version>6.1.1</testng.version>
     </properties>
+    
+    <!-- For deploying builds to the artifact server -->
+    <distributionManagement>
+        <snapshotRepository>
+                <id>snapshots</id>
+                <url>http://poseidon.digitalarchives.hawaii.gov:8080/archiva/repository/snapshots/</url>
+        </snapshotRepository>
+    </distributionManagement>
+    
 
     <repositories>
-        <!--
-        Repository hosting NetBeans modules, especially APIs.
-        Versions are based on IDE releases, e.g.: RELEASE691
-        To create your own repository, use: nbm:populate-repository
+        <!--
+        Repository hosting NetBeans modules, especially APIs.
+        Versions are based on IDE releases, e.g.: RELEASE691
+        To create your own repository, use: nbm:populate-repository
         -->
         <repository>
             <id>netbeans</id>
@@ -40,6 +47,25 @@
             <artifactId>org-netbeans-api-annotations-common</artifactId>
             <version>RELEASE731</version>
         </dependency>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>HidaLibraryWrapper</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.netbeans.api</groupId>
+            <artifactId>org-openide-util-lookup</artifactId>
+            <version>RELEASE731</version>
+            <type>jar</type>
+        </dependency>
+        
+        <!-- Test NG -->
+        <dependency>
+            <groupId>org.testng</groupId>
+            <artifactId>testng</artifactId>
+            <version>${testng.version}</version>
+            <scope>test</scope>
+        </dependency>
     </dependencies>
 
     <build>
@@ -49,6 +75,11 @@
                 <artifactId>nbm-maven-plugin</artifactId>
                 <version>3.11</version>
                 <extensions>true</extensions>
+                <configuration>
+                    <publicPackages>
+                        <publicPackage>gov.hawaii.digitalarchives.hida.kukini.springservice</publicPackage>
+                    </publicPackages>
+                </configuration>
             </plugin>
 
             <plugin>
@@ -57,8 +88,8 @@
                 <artifactId>maven-compiler-plugin</artifactId>
                 <version>2.5.1</version>
                 <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
+                    <source>1.7</source>
+                    <target>1.7</target>
                 </configuration>
             </plugin>
 
diff --git a/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProvider.java b/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProvider.java
new file mode 100644
index 0000000..e595603
--- /dev/null
+++ b/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProvider.java
@@ -0,0 +1,19 @@
+package gov.hawaii.digitalarchives.hida.kukini.springservice;
+
+/**
+ * Service which allows the modules within Kukini
+ * the ability to retrieve beans from a Spring Context.
+ * 
+ * @author Keone Hiraide
+ */
+public interface SpringServiceProvider {
+    /**
+     * Retrieves a bean from a spring context by name.
+     * 
+     * 
+     * @param beanName The name of the bean that you'd like to retrieve
+     *                 from a spring context.
+     * @return The bean declared within a spring context.
+     */
+    public Object getBean(String beanName);
+}
diff --git a/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProviderImpl.java b/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProviderImpl.java
new file mode 100644
index 0000000..f7a6571
--- /dev/null
+++ b/src/main/java/gov/hawaii/digitalarchives/hida/kukini/springservice/SpringServiceProviderImpl.java
@@ -0,0 +1,34 @@
+package gov.hawaii.digitalarchives.hida.kukini.springservice;
+
+import org.openide.util.lookup.ServiceProvider;
+import org.springframework.context.support.AbstractApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+
+/**
+ * Creates the main spring context to be used throughout all the
+ * other modules of Kukini.
+ * 
+ * @author Keone Hiraide
+ */
+@ServiceProvider(service = SpringServiceProvider.class)
+public class SpringServiceProviderImpl implements SpringServiceProvider {
+    
+    // The spring context.
+    private final AbstractApplicationContext ctx;
+    
+
+    /**
+     * Creates the spring context.
+     */
+    public SpringServiceProviderImpl() {
+        ctx = new ClassPathXmlApplicationContext("/spring/kukiniApplicationContext.xml");
+        ctx.registerShutdownHook();
+    }
+    
+    
+    @Override
+    public Object getBean(String beanName) {
+        return ctx.getBean(beanName);
+    }
+    
+}
diff --git a/src/main/resources/spring/kukiniApplicationContext.xml b/src/main/resources/spring/kukiniApplicationContext.xml
new file mode 100644
index 0000000..7524a7a
--- /dev/null
+++ b/src/main/resources/spring/kukiniApplicationContext.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans
+    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
+    http://www.springframework.org/schema/context
+    http://www.springframework.org/schema/context/spring-context-2.5.xsd">
+
+    <!-- PropertyPlaceholderConfigurer resolves placeholders in bean property
+     values of context definitions. The hida core module is used
+     within this module. The hida core module uses a database.properties file which is 
+     used to externalize its database deployment details. Thus, this bean is used to
+     map to the hida-core's database.properties properties file so that
+     Accessions can be properly instantiated. 
+     -->
+    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
+        <property name="locations">
+            <list>
+                <value>classpath*:META-INF/spring/database.properties</value>
+            </list>
+        </property>
+    </bean>
+    
+    <context:component-scan base-package="gov.hawaii.digitalarchives.hida.bag" />
+    <import resource="classpath*:/META-INF/spring/applicationContext.xml" />
+    <bean class="org.springbyexample.util.log.AnnotationLoggerBeanPostProcessor" />
+    
+    <bean id="upload" class="gov.hawaii.digitalarchives.hida.kukini.sipcreation.SipUploaderImpl">
+        <constructor-arg type="java.lang.String" value="http://artemis.digitalarchives.hawaii.gov/web-ingest-application/uploader/accessions"/>
+    </bean>
+    
+    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate "/>
+</beans>
\ No newline at end of file
